# https://docs.github.com/en/actions/concepts/runners/github-hosted-runners

name: check build

on:
  workflow_dispatch:
  schedule:
    - cron: "0 0 * * 1"

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    env:
      SCCACHE_GHA_ENABLED: "true"
      RUSTC_WRAPPER: "sccache"
    defaults:
      run:
        working-directory: ./packages/FUSOU-APP
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        include:
          # - platform: "macos-latest" # for Arm based macs (M1 and above).
          #   args: "--target aarch64-apple-darwin"
          # - platform: "macos-latest" # for Intel based macs.
          #   args: "--target x86_64-apple-darwin"
          - platform: "ubuntu-24.04"
            args: ""
          - platform: "ubuntu-24.04-arm"
            args: ""
          - platform: "windows-latest"
            args: ""
          - platform: "windows-11-arm"
            args: ""

    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v4

      - uses: pnpm/action-setup@v4

      - name: install dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-24.04' || matrix.platform == 'ubuntu-24.04-arm'
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf

      - name: install dependencies (ubuntu arm only)
        if: matrix.platform == 'ubuntu-24.04-arm'
        run: |
          sudo apt-get install -y xdg-utils

      - name: setup node
        uses: actions/setup-node@v4
        with:
          node-version: lts/*
          cache: "pnpm"

      - name: install Rust stable
        uses: dtolnay/rust-toolchain@stable # Set this to dtolnay/rust-toolchain@nightly
        with:
          # Those targets are only used on macos runners so it's in an `if` to slightly speed up windows and linux builds.
          #   targets: ${{ matrix.platform == 'macos-latest' && 'aarch64-apple-darwin,x86_64-apple-darwin' || '' }}
          targets: ${{ '' }}

      - name: Run sccache-cache
        if: matrix.platform != 'windows-11-arm'
        uses: mozilla-actions/sccache-action@v0.0.9

      - name: build shared-ui
        run: |
          pnpm install
          pnpm build
        working-directory: ./packages/shared-ui

      - name: install frontend dependencies
        # If you don't have `beforeBuildCommand` configured you may want to build your frontend here too.
        run: pnpm install # change this to npm or pnpm depending on which one you use.

      - uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DOTENV_PRIVATE_KEY: ${{ secrets.DOTENV_PRIVATE_KEY }}
          TAURI_SIGNING_PRIVATE_KEY: ${{ secrets.TAURI_SIGNING_PRIVATE_KEY }}
          TAURI_SIGNING_PRIVATE_KEY_PASSWORD: ${{ secrets.TAURI_SIGNING_PRIVATE_KEY_PASSWORD }}
        with:
          args: ${{ matrix.args }}
          projectPath: ./packages/FUSOU-APP
