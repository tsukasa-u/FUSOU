[package]
name = "app"
version = "0.1.0"
description = "A Tauri App"
authors = ["you"]
license = ""
repository = ""
default-run = "app"
edition = "2021"
rust-version = "1.60"
build = "build.rs"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[build-dependencies]
tauri-build = { version = "1.5.3", features = [] }

[dependencies]
serde_json = "1.0"
serde = { version = "1.0", features = ["derive"] }
tauri = { version = "1.7.0", features = [ "notification-all", "system-tray", "process-command-api"] }
quote = "1.0"
syn = "2.0.67"
proc-macro2 = "1.0"
once_cell = "1.19.0"
confy = "0.6.1"
darling = "0.20.10"
regex = "1.9.6"
sqids = "0.4.1"
tokio = { version = "1.38.0", features = ["full"] }
crossbeam = "0.8.2"
crossbeam-utils = "0.8.20"
webbrowser = "1.0.1"
arboard = "3.4.0"
wg = { version = "0.9.1", features = ["future"] }
register_macro_derive_and_attr = { path = "./../register_macro_derive_and_attr" }
register_macro_func_like = { path = "./../register_macro_func_like" }
register_trait = { path = "./../register_trait" }
proxy = { path = "./../../FUSOU-PROXY/proxy_rust/proxy" }

[features]
# this feature is used for production builds or when `devPath` points to the filesystem and the built-in dev server is disabled.
# If you use cargo directly instead of tauri's cli you can use this feature flag to switch between tauri's `dev` and `build` modes.
# DO NOT REMOVE!!
custom-protocol = [ "tauri/custom-protocol" ]
